{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","document","querySelector","addEventListener","checkAndGetData","input","loading","selectedNodeId","selectedEdgeId","login_url_base","window","location","host","includes","localStorage","password","remove","nodes","edges","fetch","method","body","JSON","stringify","headers","then","resp","json","successful","alert","data","nodesData","map","image","id","label","color","obj","shape","vis","DataSet","container","network","Network","borderWidth","size","border","background","font","shapeProperties","useBorderWithImage","layout","improvedLayout","on","style","display","popup","closePopupElement","popupButton","popUpLabelElement","popUpImageElement","popUpColorElement","popupEdge","closePopupEdgeElement","popupEdgeButton","popUpEdgeLabelElement","popUpEdgeFromElement","popUpEdgeToElement","classList","from","to","params","clickedNodeId","clickedEdgeId","undefined","add","options","draw","querySelectorAll","forEach","select","optionHtmlString","node","join","innerHTML","populateSelectList","catch","connectedToId","connectionLabel","firebaseUid","nodeCreated","edgeCreated"],"mappings":"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","file":"main.3fdb0ee1cc0f897195fc.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import \"./main.scss\";\r\n\r\ndocument.querySelector(\"button\").addEventListener(\"click\", () => {\r\n    checkAndGetData(input.value);\r\n});\r\nconst loading = document.querySelector(\"span.loading\");\r\n\r\nconst input = document.querySelector(\"input\");\r\n\r\nlet selectedNodeId;\r\nlet selectedEdgeId;\r\n\r\nconst login_url_base = window.location.host.includes(\"localhost\")\r\n    ? \"http://localhost:5001/name-rememberer-8ed08/us-central1/app\"\r\n    : \"https://us-central1-name-rememberer-8ed08.cloudfunctions.net/app\";\r\nif (localStorage.password) {\r\n    checkAndGetData(localStorage.password);\r\n    document.querySelector(\"input\").remove();\r\n    document.querySelector(\"button\").remove();\r\n}\r\n\r\nfunction populateSelectList(nodes) {\r\n    const selects = document.querySelectorAll(\"select\");\r\n    selects.forEach((select) => {\r\n        const optionHtmlString = nodes\r\n            .map((node) => `<option value=\"${node.id}\">${node.label}</option>`)\r\n            .join(\"\");\r\n        select.innerHTML = optionHtmlString;\r\n    });\r\n}\r\n\r\nlet nodes = [];\r\nlet edges = [];\r\n\r\nfunction checkAndGetData(password) {\r\n    fetch(`${login_url_base}/data`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ password }),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n    })\r\n        .then((resp) => resp.json())\r\n        .then((resp) => {\r\n            if (!resp.successful) {\r\n                return alert(\"wrong password\");\r\n            }\r\n\r\n            localStorage.password = password;\r\n            nodes = resp.data.nodes;\r\n            edges = resp.data.edges;\r\n            draw();\r\n            populateSelectList(resp.data.nodes);\r\n        })\r\n        .catch(() => {\r\n            alert(\"Fetching data failed 1\");\r\n        });\r\n}\r\n\r\n// Called when the Visualization API is loaded.\r\nfunction draw() {\r\n    let nodesData = nodes.map(({ image, id, label, color }) => {\r\n        const obj = {\r\n            id,\r\n            image,\r\n            label,\r\n            shape: image !== \"\" ? \"image\" : \"box\",\r\n        };\r\n        if (color !== \"\") {\r\n            obj.color = color;\r\n        }\r\n\r\n        return obj;\r\n    });\r\n\r\n    if (window.location.host.includes(\"localhost\")) {\r\n        //nodesData = nodesData.filter((_, i) => i < 50);\r\n    }\r\n\r\n    nodes = new vis.DataSet(nodesData);\r\n    edges = new vis.DataSet(edges);\r\n\r\n    // create people.\r\n    // value corresponds with the age of the person\r\n    var DIR = \"../img/indonesia/\";\r\n\r\n    // create connections between people\r\n    // value corresponds with the amount of contact between two people\r\n\r\n    // create a network\r\n    var container = document.querySelector(\".network\");\r\n    var data = {\r\n        nodes: nodes,\r\n        edges: edges,\r\n    };\r\n    var options = {\r\n        nodes: {\r\n            borderWidth: 1,\r\n            size: 30,\r\n            color: {\r\n                border: \"#ccc\",\r\n                background: \"#fff\",\r\n            },\r\n            font: { color: \"#000\" },\r\n            shapeProperties: {\r\n                useBorderWithImage: true,\r\n            },\r\n        },\r\n        edges: {\r\n            color: \"lightgray\",\r\n        },\r\n        layout: {\r\n            improvedLayout: false,\r\n        },\r\n    };\r\n    const network = new vis.Network(container, data, options);\r\n\r\n    network.on(\"afterDrawing\", () => {\r\n        loading.style.display = \"none\";\r\n    });\r\n\r\n    const popup = document.querySelector(\".popup\");\r\n    const closePopupElement = popup.querySelector(\".close\");\r\n    const popupButton = popup.querySelector(\"button.update-node\");\r\n\r\n    const popUpLabelElement = document.querySelector(\".popup .label\");\r\n    const popUpImageElement = document.querySelector(\".popup .image\");\r\n    const popUpColorElement = document.querySelector(\".popup .color\");\r\n\r\n    const popupEdge = document.querySelector(\".popup-edge\");\r\n    const closePopupEdgeElement = popupEdge.querySelector(\".close\");\r\n    const popupEdgeButton = popupEdge.querySelector(\"button.update-edge\");\r\n\r\n    const popUpEdgeLabelElement = document.querySelector(\".popup-edge .label\");\r\n    const popUpEdgeFromElement = document.querySelector(\r\n        \".popup-edge select.from\"\r\n    );\r\n    const popUpEdgeToElement = document.querySelector(\".popup-edge select.to\");\r\n\r\n    popupButton.addEventListener(\"click\", () => {\r\n        fetch(`${login_url_base}/node/${selectedNodeId}`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({\r\n                label: popUpLabelElement.value,\r\n                image: popUpImageElement.value,\r\n                color: popUpColorElement.value,\r\n            }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((resp) => resp.json())\r\n            .then((resp) => {\r\n                popup.classList.remove(\"visible\");\r\n            });\r\n    });\r\n\r\n    popupEdgeButton.addEventListener(\"click\", () => {\r\n        fetch(`${login_url_base}/edge/${selectedEdgeId}`, {\r\n            method: \"PUT\",\r\n            body: JSON.stringify({\r\n                from: popUpEdgeFromElement.value,\r\n                to: popUpEdgeToElement.value,\r\n                label: popUpEdgeLabelElement.value,\r\n            }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((resp) => resp.json())\r\n            .then((resp) => {\r\n                popupEdge.classList.remove(\"visible\");\r\n            });\r\n    });\r\n\r\n    closePopupElement.addEventListener(\"click\", () =>\r\n        popup.classList.remove(\"visible\")\r\n    );\r\n\r\n    closePopupEdgeElement.addEventListener(\"click\", () =>\r\n        popupEdge.classList.remove(\"visible\")\r\n    );\r\n\r\n    network.on(\"click\", function (params) {\r\n        const clickedNodeId = params.nodes[0];\r\n        const clickedEdgeId = params.edges[0];\r\n        if (clickedNodeId != undefined) {\r\n            selectedNodeId = clickedNodeId;\r\n            popup.classList.add(\"visible\");\r\n\r\n            const nodesInNetwork = network.body.nodes;\r\n            const nodeClicked = network.body.nodes[clickedNodeId];\r\n            let { id, label, image, color } = nodeClicked.options;\r\n            color = color.background;\r\n\r\n            popUpLabelElement.value = label;\r\n            popUpImageElement.value = image;\r\n            popUpColorElement.value = color;\r\n        }\r\n\r\n        if (clickedEdgeId != undefined) {\r\n            selectedEdgeId = clickedEdgeId;\r\n            const edgesInNetwork = network.body.edges;\r\n            const edgeClicked = network.body.edges[clickedEdgeId];\r\n            const { to, from, label } = edgeClicked.options;\r\n\r\n            popupEdge.classList.add(\"visible\");\r\n            popUpEdgeToElement.value = to;\r\n            popUpEdgeFromElement.value = from;\r\n            popUpEdgeLabelElement.value = label;\r\n        }\r\n    });\r\n}\r\n\r\ndocument\r\n    .querySelector(\"button.create-new-node\")\r\n    .addEventListener(\"click\", () => {\r\n        const label = document.querySelector(\".add-node .label\").value;\r\n        const color = document.querySelector(\".add-node .color\").value;\r\n        const image = document.querySelector(\".add-node .image\").value;\r\n        const connectedToId = document.querySelector(\r\n            \".add-node .connected-to\"\r\n        ).value;\r\n        const connectionLabel = document.querySelector(\r\n            \".add-node .connection-label\"\r\n        ).value;\r\n\r\n        fetch(`${login_url_base}/node`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                label,\r\n                image,\r\n                firebaseUid: \"asd\",\r\n                color,\r\n                connectedToId,\r\n                connectionLabel,\r\n                password: localStorage.password,\r\n            }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((resp) => resp.json())\r\n            .then((resp) => {\r\n                let { id, label, color, image } = resp.nodeCreated;\r\n                nodes.add({ id, label, color, image });\r\n\r\n                let { from, to } = resp.edgeCreated;\r\n                edges.add({ from, to, label: resp.edgeCreated.label });\r\n            })\r\n            .catch(() => {\r\n                alert(\"Fetching data failed\");\r\n            });\r\n    });\r\n"],"sourceRoot":""}